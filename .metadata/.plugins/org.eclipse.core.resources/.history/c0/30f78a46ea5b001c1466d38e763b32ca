package study.spring.springhelper.helper;

import lombok.Data;
import lombok.extern.slf4j.Slf4j;

@Data
@Slf4j
public class PageData {
   // get 파라미터로 처리할값
	private int nowPage = 1;
	
	// DB에서 조회한 결과값
	private int totalCount = 0; //전체 게시글수
	
	
	// 개발자가 정의해야하는 값
	private int listCount = 10; //한페이지에 보여질 글의 목록수
	private int groupCount = 5; //한그룹에 표시할 페이지 번호 개수
	
	//연산처리가 필요한값
	private int totalPage = 0; // 전체페이지수
	private int startPage = 0; // 현재그룹의 시작페이지
	private int endPage = 0;
	private int prevPage = 0; //이전그룹의 마지막페이지
	private int nextPage = 0; //이전그룹의 첫페이지
	private int offset = 0; //MySQL의 LIMIT 시작 위치

	// 객체가 만들어짐과 동시에 필요한 연산을 일괄 수행하는 생성자
	public PageData(int nowPage, int totalCount, int listCount, int groupCount) {
		this.nowPage =  nowPage;
		this.totalCount = totalCount;
		this.listCount = listCount;
		this.groupCount = groupCount;
		
		//전체페이지수
		totalPage = ((totalCount - 1) / listCount ) +1;
		
		//현재 페이지에대한 오차 조절
		if (nowPage < 0) {
			nowPage =1;
		}
		
		if (nowPage > totalPage) {
			nowPage = totalPage;
		}
		//현재 페이징 그룹의 시작번호
		startPage = ((nowPage -1) / groupCount ) * groupCount +1;
		
		// 현재 페이징그룹의 끝 페이지번호
		endPage = (((startPage -1) + groupCount) / groupCount) * groupCount;
		
		// 끝 페이지 번호가 전체 페이지수를 초과하면 오차범위 조절
		if (endPage > totalPage) {
			endPage = totalPage;
		}
		
		// 이전그룹의 마지막 페이지
		if (startPage > groupCount ) {
			prevPage = startPage -1;
		} else {
			prevPage = 0;
		}
		
		// 다음그룹의 페이지
		if (endPage < totalPage) {
			nextPage = endPage +1;
			
		} else {
			nextPage = 0;
		}
		
		offset = (nowPage -1 ) * listCount;
		
		log.debug(this.toString());
	}
	
}
